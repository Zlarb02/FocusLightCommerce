name: Deploy to Production

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup environment variables
        run: |
          echo "TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Commenté car nous utilisons Vercel pour le frontend dans l'architecture hybride
      # - name: Build and push Frontend Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./client
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/focuslight-frontend:${{ env.TAG }}, ${{ secrets.DOCKERHUB_USERNAME }}/focuslight-frontend:latest

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/focuslight-backend:${{ env.TAG }}, ${{ secrets.DOCKERHUB_USERNAME }}/focuslight-backend:latest

      - name: Deploy to VPS via ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            cd /opt/portainer/compose/focuslight

            # Enregistrer les variables d'environnement
            cat > .env << EOL
            TAG=${{ env.TAG }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}
            SESSION_SECRET=${{ secrets.SESSION_SECRET }}
            API_URL=${{ secrets.API_URL }}
            BACKEND_PORT=${{ secrets.BACKEND_PORT }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            EOL

            # Télécharger le fichier docker-compose.yml mis à jour
            curl -o docker-compose.yml https://raw.githubusercontent.com/YourUsername/FocusLightCommerce/main/docker-compose.yml

            # Redémarrer les conteneurs avec les nouvelles images
            docker-compose pull
            docker-compose up -d

            # Nettoyer les anciennes images
            docker image prune -af
